version: '3.8'

services:
  n8n:
    container_name: n8n
    restart: always
    image: docker.n8n.io/n8nio/n8n
    ports:
      - 5678:5678
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - DB_POSTGRESDB_PORT=${POSTGRES_PORT}
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - NODE_ENV=${NODE_ENV}
      - WEBHOOK_URL=${WEBHOOK_URL}
    volumes:
      - ${DATA_DIR}/n8n:/home/node/.n8n
    networks:
      - pegasus
    depends_on:
      n8n-postgres:
        condition: service_healthy
  
  n8n-postgres:
    container_name: n8n-postgres
    restart: always
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - ${DATA_DIR}/n8n-postgres:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - pegasus
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  n8n-postgres:
    name: n8n-postgres
  n8n:
    name: n8n

networks:
  pegasus:
    external: true

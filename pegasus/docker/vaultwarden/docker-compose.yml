version: '3.7'

services:
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    restart: unless-stopped
    ports:
      - 8002:80
      - 3012:3012
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - WEBSOCKET_ENABLED=true
      - DOMAIN=$DOMAIN
      - LOGIN_RATELIMIT_MAX_BURST=10
      - LOGIN_RATELIMIT_SECONDS=60
      - ADMIN_RATELIMIT_MAX_BURST=10
      - ADMIN_RATELIMIT_SECONDS=60
      - SENDS_ALLOWED=false
      - EMERGENCY_ACCESS_ALLOWED=true
      - WEB_VAULT_ENABLED=true
      - ADMIN_TOKEN=$ADMIN_TOKEN
      - INVITATIONS_ALLOWED=true
      - SHOW_PASSWORD_HINT=false
      - SIGNUPS_ALLOWED=false
    volumes:
      - vaultwarden:/data
      - vaultwarden:/log
    networks:
      vaultwarden:
        ipv4_address: $VAULTWARDEN_IPV4_ADDRESS
    depends_on:
      - postgresql

  postgresql:
    container_name: postgresql
    restart: always
    image: postgres:alpine
    ports:
      - 5433:5432
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      bitwarden:
        ipv4_address: ${POSTGRES_IPV4_ADDRESS}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -h localhost -U $POSTGRES_USER -d $POSTGRES_DB'
        ]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  vaultwarden:
    name: vaultwarden
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: ${VAULTWARDEN_SUBNET}

volumes:
  vaultwarden:
  postgresql:

version: '3.7'

services:
  activepieces:
    image: activepieces/activepieces:0.38.3
    container_name: activepieces
    restart: unless-stopped
    ports:
      - '8080:80'
    depends_on:
      activepieces-postgres:
        condition: service_healthy
      activepieces-redis:
        condition: service_healthy
    environment:
      - AP_ENGINE_EXECUTABLE_PATH=${AP_ENGINE_EXECUTABLE_PATH}
      - AP_API_KEY=${AP_API_KEY}
      - AP_ENCRYPTION_KEY=${AP_ENCRYPTION_KEY}
      - AP_JWT_SECRET=${AP_JWT_SECRET}
      - AP_ENVIRONMENT=${AP_ENVIRONMENT}
      - AP_FRONTEND_URL=${AP_FRONTEND_URL}
      - AP_WEBHOOK_TIMEOUT_SECONDS=${AP_WEBHOOK_TIMEOUT_SECONDS}
      - AP_TRIGGER_DEFAULT_POLL_INTERVAL=${AP_TRIGGER_DEFAULT_POLL_INTERVAL}
      - AP_POSTGRES_DATABASE=${POSTGRES_DB}
      - AP_POSTGRES_HOST=${AP_POSTGRES_HOST}
      - AP_POSTGRES_PORT=${AP_POSTGRES_PORT}
      - AP_POSTGRES_USERNAME=${POSTGRES_USER}
      - AP_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AP_EXECUTION_MODE=${AP_EXECUTION_MODE}
      - AP_REDIS_HOST=${AP_REDIS_HOST}
      - AP_REDIS_PORT=${AP_REDIS_PORT}
      - AP_SANDBOX_RUN_TIME_SECONDS=${AP_SANDBOX_RUN_TIME_SECONDS}
      - AP_TELEMETRY_ENABLED=${AP_TELEMETRY_ENABLED}
      - AP_TEMPLATES_SOURCE_URL=${AP_TEMPLATES_SOURCE_URL}
    networks:
      - pegasus

  activepieces-postgres:
    image: postgres:14
    restart: unless-stopped
    container_name: activepieces-postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - '${DATA_DIR}/activepieces/postgres:/var/lib/postgresql/data'
    networks:
      - activepieces

  activepieces-redis:
    image: redis:7
    container_name: activepieces-redis
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    volumes:
      - '${DATA_DIR}/activepieces/redis/:/data'
    networks:
      - activepieces

networks:
  activepieces:
    external: true

volumes:
  changedetection:
    name: activepieces
